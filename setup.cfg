[flake8]
max-line-length = 120
exclude = .git,__pycache__,venv
max-complexity = 10
select = B,C,E,F,W,T4,B9
ignore = W503

[pylint]
[FORMAT]
# Maximum number of characters on a single line
max-line-length=120

# Good variable names which should always be accepted, separated by a comma
good-names=i,j,k,ex,Run,_,id,x,y,z

# Maximum number of lines in a module
max-module-lines=1000

[MESSAGES CONTROL]
disable=missing-docstring,
        too-few-public-methods,
        import-error,
        invalid-name,
        too-many-arguments,
        too-many-instance-attributes,
        too-many-locals,
        too-many-branches,
        too-many-statements,
        fixme,
        line-too-long,
        pointless-string-statement

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_functions = test_*
python_classes = Test* test_* Test*
addopts = -v --cov=doclistbuilder --cov-report=term-missing

[coverage:run]
source = src
omit = 
    */tests/*
    */__pycache__/*

[coverage:report]
show_missing = true
fail_under = 80
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about missing debug-only code:
    def __repr__
    if self\._debug
    raise NotImplementedError
    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:
    # Don't complain about abstract methods
    @abstractmethod

[tool:black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
